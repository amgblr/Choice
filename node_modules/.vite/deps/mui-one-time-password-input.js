import {
  TextField_default
} from "./chunk-UNOIGA3F.js";
import "./chunk-53YOMEWK.js";
import "./chunk-HEHZQNTC.js";
import "./chunk-L4DFHAL6.js";
import "./chunk-M7KT2KOG.js";
import "./chunk-T7NY46GG.js";
import "./chunk-JIOKIN6Y.js";
import "./chunk-B7Z6IZXJ.js";
import "./chunk-QU5CLVXZ.js";
import "./chunk-PHNMT3NR.js";
import "./chunk-CKX3BX6W.js";
import "./chunk-DRC3BVBB.js";
import "./chunk-RMMHIUZ3.js";
import "./chunk-AVAGZCNP.js";
import "./chunk-3RET3YIL.js";
import "./chunk-GKPWN6ZT.js";
import "./chunk-RO3X5GAA.js";
import "./chunk-V4DVPHOK.js";
import "./chunk-XXUPADJX.js";
import "./chunk-FDZ6RLQN.js";
import "./chunk-YHADIXUF.js";
import "./chunk-4Z52ENKG.js";
import "./chunk-IFBBWHCQ.js";
import "./chunk-PR6ZCO7G.js";
import "./chunk-AKKANAVW.js";
import "./chunk-4L76K3VW.js";
import "./chunk-YYXNYR7E.js";
import {
  Box_default
} from "./chunk-NR7KYHTE.js";
import "./chunk-TJ4WWSAQ.js";
import "./chunk-XBPMAEQN.js";
import "./chunk-TU4SCASD.js";
import "./chunk-T2RGT4ZC.js";
import "./chunk-KPCKTKIM.js";
import "./chunk-PJ34N24D.js";
import "./chunk-7R7VUSYV.js";
import "./chunk-Y4HSIQUH.js";
import "./chunk-W7WE2RJW.js";
import "./chunk-6B5WPRYI.js";
import "./chunk-B4NP4KPM.js";
import "./chunk-UYYMBUGX.js";
import "./chunk-QSF5M6MG.js";
import "./chunk-WBEJ64CX.js";
import "./chunk-FMFFUJ5P.js";
import "./chunk-3TW4MT3C.js";
import "./chunk-UAIHK6XU.js";
import "./chunk-PNJYQXZZ.js";
import "./chunk-SJUYZQ7Y.js";
import "./chunk-DEJKJ5PH.js";
import {
  styled_default
} from "./chunk-BI3I73UF.js";
import "./chunk-HVTZFXGY.js";
import "./chunk-VWTAT46Z.js";
import "./chunk-IKNVR6L3.js";
import "./chunk-FFQKQ7UO.js";
import "./chunk-DKFUNVSZ.js";
import "./chunk-PPLKJ7N6.js";
import {
  require_jsx_runtime
} from "./chunk-IXNBSIST.js";
import "./chunk-V66CRQXE.js";
import "./chunk-KWUZEEQS.js";
import "./chunk-AT3RVNMG.js";
import "./chunk-WAFQIO3T.js";
import "./chunk-NGURHOVW.js";
import "./chunk-ABW2PW2F.js";
import "./chunk-VV5DYCQJ.js";
import "./chunk-WGLPVN3I.js";
import {
  require_react
} from "./chunk-6CE3F7YD.js";
import {
  __toESM
} from "./chunk-TFWDKVI3.js";

// node_modules/mui-one-time-password-input/dist/mui-one-time-password-input.es.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_react = __toESM(require_react());
var z = styled_default(TextField_default)`
  input {
    text-align: center;
  }
`;
var G = {
  TextFieldStyled: z
};
var J = (n) => (0, import_jsx_runtime.jsx)(G.TextFieldStyled, { ...n });
var f = {
  left: "ArrowLeft",
  right: "ArrowRight",
  backspace: "Backspace",
  home: "Home",
  end: "End"
};
function Q(n, o) {
  return n <= 0 ? [] : Array.from({ length: n }, o);
}
function U(n, o, l) {
  return n.map((a, i) => o === i ? l : a);
}
function k(n) {
  return n.join("");
}
function w(n, o) {
  return [...n, o];
}
function X(n, o, l) {
  return n.reduce(
    (a, i, d) => {
      const { characters: h, restArrayMerged: p } = a;
      if (d < l)
        return {
          restArrayMerged: p,
          characters: w(h, i)
        };
      const [m, ...g] = p;
      return {
        restArrayMerged: g,
        characters: w(h, m || "")
      };
    },
    {
      restArrayMerged: o,
      characters: []
    }
  ).characters;
}
function Z(n) {
  return n.split("");
}
var v = import_react.default.forwardRef(
  (n, o) => {
    const {
      value: l,
      length: a,
      autoFocus: i,
      onChange: d,
      TextFieldsProps: h,
      onComplete: p,
      validateChar: m,
      className: g,
      ...B
    } = n, {
      onPaste: P,
      onFocus: R,
      onKeyDown: S,
      className: E,
      ...M
    } = h || {}, c = Q(
      a,
      (e, r) => ({
        character: l[r] || "",
        inputRef: import_react.default.createRef()
      })
    ), y = (e) => c.findIndex(({ inputRef: r }) => r.current === e), D = () => c.map(({ character: e }) => e), N = (e, r) => {
      const t = U(
        D(),
        e,
        r
      );
      return k(t);
    }, x = (e) => {
      var _a, _b;
      (_b = (_a = c[e]) == null ? void 0 : _a.inputRef.current) == null ? void 0 : _b.focus();
    }, u = (e) => {
      var _a, _b, _c, _d;
      e === -1 ? (_b = (_a = c[c.length - 1]) == null ? void 0 : _a.inputRef.current) == null ? void 0 : _b.select() : (_d = (_c = c[e]) == null ? void 0 : _c.inputRef.current) == null ? void 0 : _d.select();
    }, F = (e) => {
      e + 1 !== a && (c[e + 1].character ? u(e + 1) : x(e + 1));
    }, K = (e) => {
      e > 0 && u(e - 1);
    }, V = (e) => {
      const r = e.target.value[0] || "", t = y(e.target);
      if (typeof m == "function" && !m(r, t))
        return;
      const s = N(t, r);
      d == null ? void 0 : d(s), s.length === a && (p == null ? void 0 : p(s)), r !== "" ? s.length < a ? F(s.length - 1) : F(t) : s[t] ? u(t) : K(t);
    }, b = (e) => {
      e.preventDefault(), e.target.select(), R == null ? void 0 : R(e);
    }, j = (e) => {
      const r = e.target, t = y(r);
      r.value === e.key ? (e.preventDefault(), F(t)) : !r.value && f.backspace === e.key || f.left === e.key ? (e.preventDefault(), u(t - 1)) : f.right === e.key ? (e.preventDefault(), u(t + 1)) : f.home === e.key ? (e.preventDefault(), u(0)) : f.end === e.key && (e.preventDefault(), u(-1)), S == null ? void 0 : S(e);
    }, $ = (e) => {
      e.preventDefault();
      const r = e.target, t = e.clipboardData.getData("text/plain"), s = y(r), Y = D(), A = X(
        Y,
        Z(t),
        s
      ), O = A.findIndex((_, H) => H > s && _ === ""), I = k(A);
      if (d == null ? void 0 : d(I), I.length === a) {
        p == null ? void 0 : p(I), x(a - 1);
        return;
      }
      O !== -1 && x(O), P == null ? void 0 : P(e);
    };
    return (0, import_jsx_runtime.jsx)(
      Box_default,
      {
        display: "flex",
        gap: "20px",
        alignItems: "center",
        ref: o,
        className: `MuiOtpInput-Box ${g || ""}`,
        ...B,
        children: c.map(({ character: e, inputRef: r }, t) => (0, import_jsx_runtime.jsx)(
          J,
          {
            autoFocus: i ? t === 0 : false,
            autoComplete: "one-time-code",
            value: e,
            inputRef: r,
            className: `MuiOtpInput-TextField MuiOtpInput-TextField-${t + 1} ${E || ""}`,
            onPaste: $,
            onFocus: b,
            onChange: V,
            onKeyDown: j,
            ...M
          },
          t
        ))
      }
    );
  }
);
v.defaultProps = {
  value: "",
  length: 4,
  autoFocus: false,
  validateChar: () => true,
  onChange: () => {
  },
  onComplete: () => {
  },
  TextFieldsProps: {}
};
export {
  v as MuiOtpInput
};
//# sourceMappingURL=mui-one-time-password-input.js.map
